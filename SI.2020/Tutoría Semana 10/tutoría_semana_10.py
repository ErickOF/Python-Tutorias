# -*- coding: utf-8 -*-
"""Tutoría Semana 10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15ANcoA477OeVQ1kWDj83JHOl5APrReAP

# **Diccionarios**
"""

diccionario = {}
print(diccionario)

diccionario['uno'] = 1
print(diccionario)

diccionario['dos'] = 2
print(diccionario)

print(diccionario['uno'])

print(diccionario['tres'])

diccionario['tres'] = 3
print(diccionario['tres'])

diccionario['tres'] = 33
print(diccionario)

diccionario['cuatro'] = []
print(diccionario)

diccionario['cuatro'].append(4)
diccionario['cuatro'].append(44)
diccionario['cuatro'].append(444)
print(diccionario)

diccionario['cuatro'].remove(4)
print(diccionario)

subdiccionario = {1: 'uno', 2: 'dos'}
print(subdiccionario)

diccionario['sub'] = subdiccionario
print(diccionario)

diccionario['sub'][5] = 'cinco'
print(diccionario)

for key in diccionario:
    print(key)

for key in diccionario:
    print(key, diccionario[key])

for value in diccionario.values():
    print(value)

for key in diccionario.keys():
    print(key, diccionario[key])

for key, value in diccionario.items():
    print(key, value)

for item in diccionario.items():
    print(item)

inventario = {}

seguir = 'S'

while seguir.upper() != 'N':
    # Pedimos los valores
    producto = input('Ingrese el nombre del producto: ')
    cantidad = int(input('Ingrese la cantidad del producto: '))

    # Agregamos al diccionario
    producto = producto.lower()

    if producto in inventario:
        inventario[producto] += cantidad
    else:
        inventario[producto] = cantidad

    # Preguntamos si desea continuar
    seguir = input('Desea seguir (S/N): ')

    print()

print(inventario)

print(diccionario)

del diccionario['uno']
print(diccionario)

num = 2
print(num)

del num
print(num)

"""# **Compresión de Matrices**"""

lista = [i for i in range(100)]
print(lista)

pares = [i for i in range(0, 100, 2)]
print(pares)

impares = [i for i in range(1, 100, 2)]
print(impares)

pares = [i for i in range(-100, 100) if abs(i) % 2 == 0]
print(pares)

impares = [i for i in range(-100, 100) if abs(i) % 2 != 0]
print(impares)

import random

# Negativos -> 0
lista = [random.randint(-10, 10) for _ in range(10)]
ceros_nums = [num if num > 0 else 0 for num in lista]
print(lista)
print(ceros_nums)

# Negativos -> 0
# Positivos -> 1
lista = [1 if random.randint(-10, 10) > 0 else 0 for _ in range(10)]
print(lista)

filas = 10
columnas = 5

matriz = [[i*j for j in range(columnas)] for i in range(filas)]
print(matriz)

def generar_matriz(filas, columnas):
    return [[random.randint(0, 9) for j in range(columnas)] for i in range(filas)]

def sumar_matrices(A, B):
    C = []

    for i in range(len(A)):
        fila = []

        for j in range(len(A[0])):
            fila.append(A[i][j] + B[i][j])
        
        C.append(fila)
    
    return C

A = generar_matriz(3, 4)
B = generar_matriz(3, 4)

print(A, B, sep='\n')
print(sumar_matrices(A, B))

"""# **Recorrer lista circular**"""

lista = [random.randint(0, 9) for _ in range(10)]
print(lista)

largo = len(lista)

for i in range(3*largo):
    print(f'indice: {i}, indice circular: {i % largo}, elemento: {lista[i % largo]}')

largo = len(lista)
pos = random.randint(0, 9)

print(lista)

print('Empezando en la posicion:', pos)

for i in range(pos, pos + largo):
    print(f'indice: {i}, indice circular: {i % largo}, elemento: {lista[i % largo]}')

largo = len(lista)
pos = random.randint(0, 9)

print(lista)

print('Empezando en la posicion:', pos)

for i in range(pos, pos + largo):
    if i >= largo:
        i -= largo
    print(f'indice: {i}, indice circular: {i}, elemento: {lista[i]}')

largo = len(lista)

for i in range(4*largo):
    if i >= largo:
        i -= largo
    print(f'indice: {i}, indice circular: {i}, elemento: {lista[i]}')

largo = len(lista)
vueltas = -1

for i in range(4*largo):
    if i % largo == 0:
        vueltas += 1

    i -= largo * vueltas

    print(f'indice: {i}, indice circular: {i}, elemento: {lista[i]}')

largo = 26

abecedario = 'Erick Obregon ZYB'

key = 10

for letra in abecedario:
    codigo_ascii = ord(letra)
    nuevo_codigo = codigo_ascii + key

    if letra.islower() and nuevo_codigo > ord('z'):
        nuevo_codigo -= largo
    
    if letra.isupper() and nuevo_codigo > ord('Z'):
        nuevo_codigo -= largo

    nueva_letra = chr(nuevo_codigo)
    print(nueva_letra)